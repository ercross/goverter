input:
    input.go: |
        package person

        // goverter:converter
        // goverter:searchMode fieldName tag:bson
        type Converter interface {
            ConvertPerson(PersonEnglish) PersonFrench
        }

        type PersonEnglish struct {
            FirstName string `graphql:"firstName"`
            LastName  string `graphql:"lastName"`
            Age       int    `graphql:"age"`
        }

        type PersonFrench struct {
            Prenom       string `bson:"firstName"`
            NomDeFamille string `bson:"lastName"`
            Age          int    `bson:"age"`
        }

success:
    - generated/generated.go: |
          // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

          package generated

          import execution "github.com/jmattheis/goverter/execution"

          type ConverterImpl struct{}

          func (c *ConverterImpl) ConvertPerson(source execution.PersonEnglish) execution.PersonFrench {
            var personPersonFrench execution.PersonFrench
            personPersonFrench.Prenom = source.FirstName
            personPersonFrench.NomDeFamille = source.LastName
            personPersonFrench.Age = source.Age
            return personPersonFrench
          }
